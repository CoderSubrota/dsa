#include<bits/stdc++.h>

vector<int> reverseLevelOrder(TreeNode<int> *root) {
    vector<int> result;
    if (!root) {
        return result;
    }

    queue<TreeNode<int>*> q;
    q.push(root);

    while (!q.empty()) {
        int size = q.size();
        vector<int> level;

        for (int i = 0; i < size; i++) {
            TreeNode<int>* node = q.front();
            q.pop();
            level.push_back(node->val);

            if (node->left) {
                q.push(node->left);
            }
            if (node->right) {
                q.push(node->right);
            }
        }

        for (int i = level.size() - 1; i >= 0; i--) {
            result.push_back(level[i]);
        }
    }

    return result;
}